# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserType {
  id: String!

  """昵称"""
  name: String!

  """简介"""
  desc: String!

  """tel"""
  tel: String!

  """头像"""
  avatar: String

  """邮箱"""
  email: String!
}

type Page {
  total: Int!
  pageNum: Int!
  pageSize: Int!
}

type Result {
  code: Int!
  message: String
  data: String
}

type StudentType {
  id: String!
  createdAt: DateTime!
  createdBy: String
  updatedAt: DateTime
  updatedBy: String
  deletedAt: DateTime
  deletedBy: String

  """昵称"""
  name: String

  """手机号"""
  tel: String

  """头像"""
  avatar: String

  """账号"""
  account: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type StudentResult {
  code: Int!
  message: String!
  data: StudentType
}

type StudentResults {
  code: Int!
  message: String!
  data: [StudentType!]
  page: Page
}

type Query {
  """使用 ID 查询用户"""
  find(id: String!): UserType!

  """使用 ID 查询用户"""
  getUserInfo: UserType!

  """获取单个学生信息"""
  getStudentInfo: StudentResult!

  """获取学生列表"""
  getStudents(page: PageInput!): StudentResults!
}

input PageInput {
  pageNum: Float!
  pageSize: Float!
}

type Mutation {
  """新增用户"""
  create(params: UserInput!): Boolean!

  """更新用户"""
  updateUser(id: String!, params: UserInput!): Result!

  """删除用户"""
  delete(id: String!): Boolean!

  """发送邮箱验证码"""
  sendEmailCode(email: String!): Result!

  """登录"""
  login(email: String!, code: String!): Result!

  """学员登录"""
  studentLogin(account: String!, password: String!): Result!

  """学员注册"""
  studentRegister(account: String!, password: String!): Result!

  """更新单个学生信息"""
  commitStudentInfo(params: StudentInput!): StudentResult!
}

input UserInput {
  """昵称"""
  name: String!

  """简介"""
  desc: String!

  """头像"""
  avatar: String
}

input StudentInput {
  """昵称"""
  name: String!

  """手机号"""
  tel: String!

  """头像"""
  avatar: String!
}